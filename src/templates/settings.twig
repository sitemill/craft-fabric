{#
/**
 * Library plugin for Craft CMS 3.x
 *
 * Library Settings.twig
 *
 * @author    SiteMill
 * @copyright Copyright (c) 2020 SiteMill
 * @link      https://sitemill.co
 * @package   Library
 * @since     1.0.0
 */
#}

{% import "_includes/forms" as forms %}

{{ forms.lightswitchField({
    label: 'Private Site',
    instructions: 'Enables the login system.',
    id: 'private',
    name: 'private',
    on: (settings.private is defined) ? settings.private : ""}) }}

{# Define asset sources #}
{% set assetSources = {
    'disabled' : {
        label: 'Disabled',
        value: '0'
    },
} %}

{% if craft.fabric.siloInstalled %}
    {% set assetSources = assetSources|merge({
        'silo' : {
            label: 'Silo',
            value: 'silo'
        }
    }) %}
{% endif %}

{% for volume in craft.app.volumes.allVolumes %}
    {% set folder = craft.app.assets.rootFolderByVolumeId(volume.id) %}
    {% set assetSources = assetSources|merge({
        (volume.handle) : {
            label: volume.name,
            value: volume.handle
        }
    }) %}
{% endfor %}

{{ forms.selectField({
    label: 'Assets Source'|t('fabric'),
    instructions: 'Select the asset source to use'|t('fabric'),
    id: 'assetsSource',
    name: 'assetsSource',
    value: settings.assetsSource,
    options: assetSources
}) }}

{% set sections = [] %}

{% for section in craft.sections.allSections %}

    {% set section = craft.app.sections.sectionByHandle(section.handle) %}
    {% set firstEntryType = section.getEntryTypes[0] %}
    {% set fields = firstEntryType.getFieldLayout.getFields() %}
    {% set assetFields = [{
        label: 'None',
        value: ''
    }] %}
    {% for field in fields if field.instance == 'craft\\fields\\Assets' or field.instance == 'sitemill\\silo\\fields\\SiloAssetsField' %}
        {% set field = craft.fields.fieldById(field.id) %}
        {% set assetFields = assetFields|merge([
            {
                label: field.name,
                value: field.handle
            }
        ]) %}
    {% endfor %}

    {% set sections = sections|merge({
        (section.handle): {
            section: section.name,
            enabled: settings.entrySources[section.handle].enabled is defined ? settings.entrySources[section.handle].enabled : '',
            showInSearch: settings.entrySources[section.handle].showInSearch is defined ? settings.entrySources[section.handle].showInSearch : '',
            thumbnailField: include('_includes/forms/select', {
                id: 'thumbnailField',
                name: 'entrySources[' ~ section.handle ~ '][thumbnailField]',
                small: true,
                value: settings.entrySources[section.handle].thumbnailField is defined ? settings.entrySources[section.handle].thumbnailField : '',
                options: assetFields
            }),
            entryTemplate: settings.entrySources[section.handle].entryTemplate is defined ? settings.entrySources[section.handle].entryTemplate : '',
        }|filter
    }) %}
{% endfor %}

{{ forms.editableTableField({
    label: "Entry Sources"|t('fabric'),
    instructions: "Decide which entry setions will be included by Library"|t('fabric'),
    id: 'entrySources',
    name: 'entrySources',
    cols: {
        section: {
            type: 'heading',
            heading: "Section"|t('app'),
            thin: true
        },
        thumbnailField: {
            heading: "Thumbnail field"|t('fabric'),
            type: 'heading'
        },
        enabled: {
            type: 'lightswitch',
            heading: "Enabled"|t('app'),
            thin: true
        },
        showInSearch: {
            type: 'lightswitch',
            heading: "Show in search"|t('fabric'),
            thin: true
        },
        entryTemplate: {
            type: 'template',
            heading: 'Template'
        }
    }|filter,
    rows: sections,
    fullWidth: false,
    staticRows: true
}) }}



{% if settings.assetsSource is not null %}

    {% set assetFields = settings.baseAssetFields %}

    {% if craft.fabric.siloInstalled and craft.fabric.siloActive %}
        {% set layoutId = craft.app.fields.getLayoutByType(
            'sitemill\\silo\\elements\\SiloAsset'
            ).id %}
    {% else %}
        {% set layoutId = craft.app.volumes.volumeByHandle(
            settings.assetsSource
            ).fieldLayoutId %}
    {% endif %}


    {% for field in craft.app.fields.fieldsByLayoutId(layoutId) %}
        {% set assetFields = assetFields|merge({
            (field.handle): {
                label: field.name,
                enabled: settings.assetFields[field.handle].enabled is defined ? settings.assetFields[field.handle].enabled : '',
            }
        }) %}
    {% endfor %}

    {{ forms.editableTableField({
        label: "Asset field layout"|t('fabric'),
        instructions: "Define the fields that will show on an assets page"|t('fabric'),
        id: 'assetFields',
        name: 'assetFields',
        cols: {
            label: {
                type: 'heading',
                heading: "Field"|t('app'),
                thin: true
            },
            enabled: {
                type: 'lightswitch',
                heading: "Enabled"|t('app'),
                thin: true
            }
        }|filter,
        rows: assetFields,
        fullWidth: false,
        staticRows: true,
        minRows:assetFields|length,
        maxRows:assetFields|length
    }) }}

    {% for handle,field in assetFields %}
        <input type="hidden" name="assetFields[{{ handle }}][label]" value="{{ field.label }}">
    {% endfor %}

{% endif %}