{% set title = title|default(null) %}

{# items <elementQuery> #}
{% set query = query %}

{# limit <int> limit the amount of items shown #}
{% set limit = limit|default(null) %}

{# elementType <string> entry or asset #}
{% set elementType = elementType %}

{# thumbnailField <string> If it's an entry listing, a thumbnaiil field can be specified #}
{% set thumbnailField = thumbnailField|default('') %}

{# layout <string> grid or list #}
{% set layout = layout|default('grid') %}

{# editable <bool> does the user have permission to edit these items? #}
{% set editable = editable|default(false) %}

{# truncated <bool> if true a link will be shown to view all entries #}
{% set truncated = truncated|default(false) %}

{# fullWidth <bool> is this a full page listing? #}
{% set fullPage = fullPage|default(false) %}

{# pagination <string> paginate the items â€“ this can only be used once per page
    'false' : do not paginate
    'infinite' : paginate using infinite scroll
#}
{% set paginate = paginate|default(false) %}

{# Fetch the entries #}
{% if limit %}
    {% set query = query.limit(limit) %}
{% endif %}

{# Paginate? #}
{% if paginate %}
    {% paginate query as pageInfo, items %}
{% else %}
    {% set items = query.all() %}
{% endif %}

{# TODO: cache based on element id #}

<div class="listing listing--{{ elementType }} | relative mx-auto ">
    {% if title or truncated %}
        <div class="listing__header | container-full flex justify-between">
            {% if title %}
                <h2 class="listing__title | text-xl font-medium text-gray-800 py-4">
                    {{ title }}
                </h2>
            {% endif %}
        </div>
    {% endif %}

    <div class="listing__items |
        {% if layout == 'grid' %}
            grid grid-cols-2
            {% if fullPage %}
                sm:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 2xl:grid-cols-6 3xl:grid-cols-7 4xl:grid-cols-8
            {% else %}

            {% endif %}
        {% endif %}">
        {% for item in items %}
            {% set thumbnail = null %}
            {% if thumbnailField %}
                {% set thumbField = item[thumbnailField].one %}
                {% set thumbnail = thumbField and thumbField.instance == 'sitemill\\silo\\elements\\SiloAsset' ? thumbField.file : thumbField %}
            {% elseif elementType == 'asset' %}
                {% set thumbnail = craft.fabric.siloActive ? item.file : item %}
            {% elseif (elementType == 'entry' and craft.fabric.settings.entrySources|length) and craft.fabric.settings.entrySources[item.section.handle].thumbnailField %}
                {% set thumbField = item[craft.fabric.settings.entrySources[item.section.handle].thumbnailField].one %}
                {% set thumbnail = thumbField and thumbField.instance == 'sitemill\\silo\\elements\\SiloAsset' ? thumbField.file : thumbField %}
            {% endif %}
            {% include '_fabric/components/card/' ~ layout with {
                item:item,
                elementType: elementType,
                url: elementType == 'asset' ? url('asset' ~ '/' ~ item.id ~ '/' ~ item.title|kebab) : item.url,
                editable: editable,
                thumbnail: thumbnail,
            } only %}
        {% endfor %}
        {% if truncated %}
            {% if elementType == 'asset' %}
                {% set moreUrl = url('listing/assets/?' ~ craft.request.queryStringWithoutPath ) %}
            {% elseif elementType == 'entry' %}
                {% set moreUrl = url('listing/entries/' ~ sectionHandle|kebab ~ '/?' ~ craft.request.queryStringWithoutPath ) %}
            {% endif %}
            <a class="view-all |  flex justify-center items-center p-4 m-4 leading-tight border border-primary text-primary action action--large"
               href="{{ moreUrl }}">
                View all {{ query|length }} {{ elementType }}s <i class="fas fa-arrow-right ml-2"></i>
            </a>
        {% endif %}

    </div>

    {% if paginate %}
        {% if paginate == 'infinite' %}
            <div class="scroller-status | hidden my-16">
                <div class="infinite-scroll-request | hidden">
                    <div class="flex justify-center text-center items-center">
                        {% include '_fabric/components/spinner' %}
                    </div>
                </div>
            </div>
        {% endif %}
        <div class="pagination {% if paginate == 'infinite' %}hidden{% endif %}">
            {% if pageInfo.prevUrl %}<a href="{{ pageInfo.prevUrl }}" class="pagination__prev">Previous
                Page</a>{% endif %}
            {% if pageInfo.nextUrl %}<a href="{{ pageInfo.nextUrl }}" class="pagination__next">Next Page</a>{% endif %}
        </div>
    {% endif %}
</div>

{% if paginate == 'infinite' %}
    {% js %}
        let infiniteScrollOptions = {
        path: '.pagination__next',
        append: '.card',
        history: false,
        prefill: true,
        status: '.scroller-status'
        }

        let infScroll = new InfiniteScroll('.listing__items', infiniteScrollOptions);

        document.body.addEventListener('htmx:beforeSwap', function(evt) {
        infScroll.destroy()
        });

        document.body.addEventListener('htmx:afterSwap', function(evt) {
        let infScroll = new InfiniteScroll('.listing__items', infiniteScrollOptions);
        });
    {% endjs %}
{% endif %}
