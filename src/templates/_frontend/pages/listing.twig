{% extends '_fabric/layouts/page.twig' %}

{# Get any URL Parameters & category #}
{% set keywords = craft.app.request.getParam('q')|default('') %}
{% set kind = craft.app.request.getParam('kind')|default('*') %}
{% set order = craft.app.request.getParam('order')|default('title asc') %}
{% set layout = craft.app.request.getParam('layout')|default('grid') %}
{% if category is not defined %}
    {% set category = craft.app.request.getParam('category') ? craft.categories.id(craft.app.request.getParam('category')).one : null %}
{% endif %}

{# Get the entry sources #}
{% set entrySources = [] %}
{% for source, settings in craft.fabric.settings.entrySources if settings['enabled'] %}
    {% set entrySources = entrySources|merge({
        (source) : {
            'title': craft.sections.sectionByHandle(source).name,
            'thumbnailField': settings.thumbnailField is defined ? settings.thumbnailField
        }
    }) %}
{% endfor %}

{# Define the type of element the listing will show #}
{% set show = elementType|default('all') %}
{% set pageTitle = keywords ? "Searching for '" ~ keywords ~ "'" : 'All items' %}
{% set sourcePage = false %}
{% set elementSource = elementSource is defined and elementSource ? elementSource|camel : false %}

{# Page settings #}
{% if show != 'all' %}
    {% if show == 'entries' %}
        {% set pageTitle = 'All entries' %}
        {% if elementSource %}
            {% set entrySection = craft.entries.section(elementSource) %}
            {% set pageTitle = craft.sections.sectionByHandle(elementSource).name %}
            {% set sourcePage = true %}
        {% endif %}
    {% else %}
        {% set pageTitle = 'All Assets' %}
        {% set sourcePage = true %}
    {% endif %}
{% endif %}

{# Set defaults #}
{% set hasAssets = 0 %}
{% set hasEntries = 0 %}
{% set queryLimit = sourcePage ? 30 : 10 %}

{# Set up category if defined #}
{% if category %}
    {% set pageTitle = category.title %}
    {% set sourcePage = true %}
    {# If category has parent, build breadcrumbs YUM #}
    {% if category.parent %}
        {% set breadcrumbs = [] %}
        {% for category in category.ancestors.all() %}
            {% set breadcrumbs = breadcrumbs|merge([{
                'title' : category.title,
                'url' :  url('listing/all?category=' ~ category.id )
            }]) %}
        {% endfor %}
    {% endif %}

    {% block pageSubtitle %}
        {% include '_fabric/components/categoryRoll.twig' with {
            'categoryRoll': category
        } %}
    {% endblock %}
{% endif %}

{% block pageMain %}
    {# If assets to be show, do an asset query #}
    {% if show in ['all','assets'] %}
        {# Get assets source #}
        {% set canEditAssets = false %}
        {% if craft.fabric.siloActive %}
            {% set assets = craft.siloAssets %}
            {% set canEditAssets = currentUser.can('silo-editSiloAssets') %}
        {% else %}
            {% set assets = craft.assets.volume(craft.fabric.settings.assetsSource) %}
            {% set canEditAssets = currentUser.can('editImagesInVolume:' ~ assets.uid) %}
        {% endif %}

        {# Set query #}
        {% set assetQuery = assets
            .search(keywords)
            .kind(kind)
            .relatedTo(category)
            .orderBy(order)
            .with(['file[0]']) %}


        {% set hasAssets = assetQuery|length %}

    {% endif %}

    {# If entries to be shown, do an entry query #}
    {% if show in ['all','entries'] %}
        {% if elementSource %}
            {% set section = craft.sections.sectionByHandle(elementSource) %}
            {% set sectionQuery = craft.entries
                .section(section)
                .search(keywords)
                .relatedTo(category)
                .orderBy(order)
                .limit(queryLimit) %}
            {% set sectionQueryLength = sectionQuery|length %}
            {% set entryQueries = { elementSource : {
                'title': null,
                'query':sectionQuery,
                'length': sectionQueryLength,
                'thumbnailField': craft.fabric.settings.entrySources[elementSource].thumbnailField is defined ? craft.fabric.settings.entrySources[elementSource].thumbnailField,
                'editable': currentUser.can('editEntries:'~section.uid)
            }} %}
            {% set hasEntries = sectionQueryLength %}
        {% else %}
            {% set entryQueries = {} %}
            {% set totalEntries = 0 %}
            {% for source, settings in craft.fabric.settings.entrySources if (settings['enabled'] and settings['showInSearch']) %}
                {% set section = craft.sections.sectionByHandle(source) %}
                {% set sectionQuery = craft.entries
                    .section(section)
                    .search(keywords)
                    .relatedTo(category)
                    .orderBy(order)
                    .limit(queryLimit) %}
                {% set sectionQueryLength = sectionQuery|length %}
                {% set totalEntries = totalEntries + sectionQueryLength %}
                {% if sectionQueryLength %}
                    {% set entryQueries = entryQueries|merge({
                        (source) : {
                            'title': section.name,
                            'query': sectionQuery,
                            'length': sectionQueryLength,
                            'thumbnailField': settings.thumbnailField is defined ? settings.thumbnailField,
                            'editable': currentUser.can('editEntries:'~section.uid)
                        }
                    }) %}
                {% endif %}
            {% endfor %}
            {% set hasEntries = totalEntries %}
        {% endif %}
    {% endif %}

    <div class="results" id="results">

        <div class="container">
            {# todo: create resultsContext component #}
            <div class="results__toolbar | space-y-4 lg:space-y-0 lg:flex justify-between items-center">
                {# TODO: get context back in #}
                {# total assets: {{ totalAssets }}, total entries: {{ totalEntries }}, all: {{ totalAssets + totalEntries }} #}
                {# {% include '_fabric/components/listingContext.twig' %} #}
                <div></div>
                {% include '_fabric/components/listingFilter.twig' %}
            </div>
        </div>

        {% if hasAssets or hasEntries %}
            <div class="results__main">

                {% if hasAssets %}
                    {% include '_fabric/components/listing' with {
                        title: not sourcePage and hasEntries ? 'Assets',
                        elementType: 'asset',
                        query: assetQuery,
                        editable: canEditAssets,
                        truncated: not sourcePage,
                        paginate: sourcePage ? 'infinite',
                        limit: queryLimit
                    } %}
                {% endif %}

                {% if hasAssets and hasEntries %}
                    {% include '_fabric/components/hr.twig' %}
                {% endif %}

                {% if hasEntries %}
                    {% for sectionHandle, entryQuery in entryQueries %}
                        {% include '_fabric/components/listing' with {
                            title: entryQuery.title,
                            elementType: 'entry',
                            query: entryQuery.query,
                            thumbnailField: entryQuery.thumbnailField,
                            editable: entryQuery.editable,
                            truncated: not sourcePage,
                            paginate: sourcePage ? 'infinite',
                            limit: queryLimit
                        } %}
                        {% if not loop.last %}
                            <hr>
                        {% endif %}
                    {% endfor %}
                {% endif %}

            </div>
        {% else %}
            <div class="container">
                No items found
            </div>
        {% endif %}
    </div>

{% endblock %}